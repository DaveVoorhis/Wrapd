plugins {
    id 'java'
    id 'maven-publish'
}

group = 'org.reldb'
version = '0.0.2-SNAPSHOT'
description = 'Wrapd'
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation fileTree('srcLib')
}

dependencies {
    implementation 'com.mchange:mchange-commons-java:0.2.19'
    implementation 'javax.activation:javax.activation-api:1.2.0'
    implementation 'com.sun.mail:jakarta.mail:1.6.4'
    implementation 'jakarta.activation:jakarta.activation-api:1.2.1'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'org.junit.platform:junit-platform-launcher:1.7.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.12.1'
    implementation 'com.mchange:c3p0:0.9.5.2'
    implementation 'org.postgresql:postgresql:42.2.8'
    implementation 'org.xerial:sqlite-jdbc:3.32.3.2'
//    implementation 'org.eclipse.jdt:org.eclipse.jdt.ecj:4.17'
//    implementation 'com.sleepycat:com.sleepycat.je:7.5.11'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
    repositories {
        mavenLocal()
    }
}

clean {
    delete '_TestData'
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}